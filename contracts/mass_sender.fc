#include "imports/stdlib.fc";

const int ton_for_fee = 100000000;

() send_transfer(slice dest, int value) impure inline {
    send_raw_message(begin_cell()
        .store_uint(0x10, 6)
        .store_slice(dest)
        .store_coins(value)
        .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
    .end_cell(), 1);
}

() send_excesses(slice dest) impure inline {
    send_raw_message(begin_cell()
        .store_uint(0x18, 6)
        .store_slice(dest)
        .store_coins(0)
        .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1 + 32)
        .store_slice("Excesses")
    .end_cell(), 160);
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    slice cs = in_msg_full.begin_parse();
    cs~skip_bits(4);
    slice sender = cs~load_msg_addr();
    slice ds = get_data().begin_parse();

    int length = ds~load_uint(8);
    cell messages = ds~load_dict();

    int total = 0;
    int index = 0;
    repeat (length) {
        (slice msg, int f?) = messages.udict_get?(8, index);
        slice dest = msg~load_msg_addr();
        int value = msg~load_coins();
        send_transfer(dest, value);
        total += value;
        index += 1;
    }
    throw_if(101, total > msg_value - ton_for_fee * length);
    send_excesses(sender);
}
